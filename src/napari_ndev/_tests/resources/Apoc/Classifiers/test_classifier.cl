/*
OpenCL RandomForestClassifier
classifier_class_name = ObjectSegmenter
feature_specification = original gaussian_blur=1 sobel_of_gaussian_blur=1
num_ground_truth_dimensions = 2
num_classes = 2
num_features = 3
max_depth = 1
num_trees = 50
feature_importances = 0.34,0.4,0.26
positive_class_identifier = 2
apoc_version = 0.12.0
*/
__kernel void predict (IMAGE_in0_TYPE in0, IMAGE_in1_TYPE in1, IMAGE_in2_TYPE in2, IMAGE_out_TYPE out) {
 sampler_t sampler = CLK_NORMALIZED_COORDS_FALSE | CLK_ADDRESS_CLAMP_TO_EDGE | CLK_FILTER_NEAREST;
 const int x = get_global_id(0);
 const int y = get_global_id(1);
 const int z = get_global_id(2);
 float i0 = READ_IMAGE(in0, sampler, POS_in0_INSTANCE(x,y,z,0)).x;
 float i1 = READ_IMAGE(in1, sampler, POS_in1_INSTANCE(x,y,z,0)).x;
 float i2 = READ_IMAGE(in2, sampler, POS_in2_INSTANCE(x,y,z,0)).x;
 float s0=0;
 float s1=0;
if(i2<321.1141662597656){
 s0+=1089523.0;
 s1+=12189.0;
} else {
 s0+=15819.0;
 s1+=39461.0;
}
if(i0<325.5){
 s0+=1099966.0;
 s1+=5059.0;
} else {
 s0+=5513.0;
 s1+=46454.0;
}
if(i0<327.5){
 s0+=1100166.0;
 s1+=4932.0;
} else {
 s0+=5465.0;
 s1+=46429.0;
}
if(i1<310.51751708984375){
 s0+=1100006.0;
 s1+=3963.0;
} else {
 s0+=5429.0;
 s1+=47594.0;
}
if(i0<327.5){
 s0+=1099759.0;
 s1+=5087.0;
} else {
 s0+=5472.0;
 s1+=46674.0;
}
if(i1<324.90692138671875){
 s0+=1100946.0;
 s1+=4455.0;
} else {
 s0+=4752.0;
 s1+=46839.0;
}
if(i2<318.72808837890625){
 s0+=1089248.0;
 s1+=11780.0;
} else {
 s0+=16321.0;
 s1+=39643.0;
}
if(i1<312.107177734375){
 s0+=1100008.0;
 s1+=3975.0;
} else {
 s0+=5360.0;
 s1+=47649.0;
}
if(i1<324.43792724609375){
 s0+=1100568.0;
 s1+=4408.0;
} else {
 s0+=4911.0;
 s1+=47105.0;
}
if(i0<325.5){
 s0+=1100183.0;
 s1+=4841.0;
} else {
 s0+=5480.0;
 s1+=46488.0;
}
if(i1<312.1769104003906){
 s0+=1100050.0;
 s1+=4053.0;
} else {
 s0+=5333.0;
 s1+=47556.0;
}
if(i1<306.41558837890625){
 s0+=1099994.0;
 s1+=3766.0;
} else {
 s0+=5661.0;
 s1+=47571.0;
}
if(i2<316.94427490234375){
 s0+=1088955.0;
 s1+=11965.0;
} else {
 s0+=16428.0;
 s1+=39644.0;
}
if(i2<325.24395751953125){
 s0+=1090138.0;
 s1+=12250.0;
} else {
 s0+=15441.0;
 s1+=39163.0;
}
if(i0<322.5){
 s0+=1099317.0;
 s1+=4853.0;
} else {
 s0+=5745.0;
 s1+=47077.0;
}
if(i2<330.10919189453125){
 s0+=1089808.0;
 s1+=12446.0;
} else {
 s0+=15536.0;
 s1+=39202.0;
}
if(i1<324.253173828125){
 s0+=1100911.0;
 s1+=4470.0;
} else {
 s0+=4849.0;
 s1+=46762.0;
}
if(i0<327.5){
 s0+=1100124.0;
 s1+=4942.0;
} else {
 s0+=5479.0;
 s1+=46447.0;
}
if(i1<312.745361328125){
 s0+=1099976.0;
 s1+=3975.0;
} else {
 s0+=5367.0;
 s1+=47674.0;
}
if(i1<311.8972473144531){
 s0+=1099952.0;
 s1+=3971.0;
} else {
 s0+=5442.0;
 s1+=47627.0;
}
if(i2<318.2601318359375){
 s0+=1089634.0;
 s1+=12080.0;
} else {
 s0+=16158.0;
 s1+=39120.0;
}
if(i0<309.5){
 s0+=1099182.0;
 s1+=4436.0;
} else {
 s0+=6380.0;
 s1+=46994.0;
}
if(i0<322.5){
 s0+=1100045.0;
 s1+=4783.0;
} else {
 s0+=5625.0;
 s1+=46539.0;
}
if(i0<328.5){
 s0+=1100140.0;
 s1+=4982.0;
} else {
 s0+=5465.0;
 s1+=46405.0;
}
if(i1<310.1982421875){
 s0+=1099903.0;
 s1+=3978.0;
} else {
 s0+=5437.0;
 s1+=47674.0;
}
if(i0<322.5){
 s0+=1099882.0;
 s1+=4908.0;
} else {
 s0+=5609.0;
 s1+=46593.0;
}
if(i0<315.5){
 s0+=1099308.0;
 s1+=4536.0;
} else {
 s0+=6268.0;
 s1+=46880.0;
}
if(i2<323.77008056640625){
 s0+=1089757.0;
 s1+=12184.0;
} else {
 s0+=15903.0;
 s1+=39148.0;
}
if(i2<324.4538879394531){
 s0+=1089709.0;
 s1+=12257.0;
} else {
 s0+=15922.0;
 s1+=39104.0;
}
if(i0<327.5){
 s0+=1099937.0;
 s1+=5126.0;
} else {
 s0+=5501.0;
 s1+=46428.0;
}
if(i1<320.5917053222656){
 s0+=1100383.0;
 s1+=4266.0;
} else {
 s0+=4976.0;
 s1+=47367.0;
}
if(i2<324.37689208984375){
 s0+=1089836.0;
 s1+=12253.0;
} else {
 s0+=15624.0;
 s1+=39279.0;
}
if(i1<312.6796875){
 s0+=1100395.0;
 s1+=3948.0;
} else {
 s0+=5294.0;
 s1+=47355.0;
}
if(i0<316.5){
 s0+=1099549.0;
 s1+=4361.0;
} else {
 s0+=6027.0;
 s1+=47055.0;
}
if(i1<325.0111083984375){
 s0+=1100854.0;
 s1+=4596.0;
} else {
 s0+=4765.0;
 s1+=46777.0;
}
if(i2<326.81561279296875){
 s0+=1089703.0;
 s1+=12380.0;
} else {
 s0+=15714.0;
 s1+=39195.0;
}
if(i0<325.5){
 s0+=1100205.0;
 s1+=4887.0;
} else {
 s0+=5563.0;
 s1+=46337.0;
}
if(i1<310.70660400390625){
 s0+=1100152.0;
 s1+=3893.0;
} else {
 s0+=5470.0;
 s1+=47477.0;
}
if(i1<312.5782470703125){
 s0+=1100004.0;
 s1+=3994.0;
} else {
 s0+=5366.0;
 s1+=47628.0;
}
if(i2<311.1652526855469){
 s0+=1087996.0;
 s1+=11599.0;
} else {
 s0+=17135.0;
 s1+=40262.0;
}
if(i1<325.15338134765625){
 s0+=1100785.0;
 s1+=4486.0;
} else {
 s0+=4764.0;
 s1+=46957.0;
}
if(i2<327.02337646484375){
 s0+=1090108.0;
 s1+=12216.0;
} else {
 s0+=15587.0;
 s1+=39081.0;
}
if(i1<329.94696044921875){
 s0+=1101013.0;
 s1+=4618.0;
} else {
 s0+=4598.0;
 s1+=46763.0;
}
if(i0<322.5){
 s0+=1099574.0;
 s1+=4848.0;
} else {
 s0+=5650.0;
 s1+=46920.0;
}
if(i2<318.2601318359375){
 s0+=1089336.0;
 s1+=11747.0;
} else {
 s0+=16523.0;
 s1+=39386.0;
}
if(i1<316.04840087890625){
 s0+=1100152.0;
 s1+=4108.0;
} else {
 s0+=5187.0;
 s1+=47545.0;
}
if(i0<327.5){
 s0+=1099610.0;
 s1+=4931.0;
} else {
 s0+=5519.0;
 s1+=46932.0;
}
if(i1<315.61572265625){
 s0+=1100051.0;
 s1+=4241.0;
} else {
 s0+=5244.0;
 s1+=47456.0;
}
if(i0<328.5){
 s0+=1099781.0;
 s1+=5102.0;
} else {
 s0+=5497.0;
 s1+=46612.0;
}
if(i1<314.7147521972656){
 s0+=1100198.0;
 s1+=4126.0;
} else {
 s0+=5295.0;
 s1+=47373.0;
}
 float max_s=s0;
 int cls=1;
 if (max_s < s1) {
  max_s = s1;
  cls=2;
 }
 WRITE_IMAGE (out, POS_out_INSTANCE(x,y,z,0), cls);
}
